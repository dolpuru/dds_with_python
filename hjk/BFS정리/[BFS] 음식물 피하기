from collections import deque
n, m, k = map(int, input().split())

list_ = [[0 for _ in range(m+1)] for _ in range(n+1)]

for i in range(k):
    a, b = map(int, input().split())
    list_[a][b] = 1

dx = [1,-1,0,0]
dy = [0,0,1,-1]
answer = 0

def bfs(start_x, start_y):
    global n, m, list_
    q = deque([(start_x, start_y)])
    
    list_[start_x][start_y] = 0
    cnt = 1

    while q:
        y, x = q.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if 1<= ny <= n and 1 <= nx <= m and list_[ny][nx]:
                q.append((ny,nx))
                list_[ny][nx] = 0
                cnt += 1

    return cnt


for i in range(1,n+1):
    for j in range(1,m+1):
        if list_[i][j]:
            answer = max(answer, bfs(i,j))

print(answer)
            


